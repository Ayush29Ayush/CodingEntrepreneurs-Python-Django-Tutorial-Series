1. Create a virtual env
2. In the venv, pip install django
3. Type django-admin to get available subcommands
Example:-
PS D:\CodingEntrepreneurs Python & Django 3.2 Tutorial Series> django-admin

Type 'django-admin help <subcommand>' for help on a specific subcommand.

Available subcommands:

[django]
    check
    compilemessages
    createcachetable
    dbshell
    diffsettings
    dumpdata
    flush
    inspectdb
    loaddata
    makemessages
    makemigrations
    migrate
    optimizemigration
    runserver
    sendtestemail
    shell
    showmigrations
    sqlflush
    sqlmigrate
    sqlsequencereset
    squashmigrations
    startapp
    startproject
    test
    testserver

4. Type "ii ." to open file explorer at your present directory

5. To create a project => Type "django-admin startproject project_name"
6. python manage.py runserver
7. To start a app => Type "python manage.py startapp app_name"

8. Go to settings and add the new app inside INSTALLED_APPS
9. Then after making changes in models.py of the app, type "python manage.py makemigrations" and then "python manage.py migrate"
10. Use "dataclasses" or "shell" to access data
11. Make views.py in project_name and write code for home_view.
11. Make templates folder and add them to settings.py or use render_to_string

12. Article.objects.all() will give Queryset which is not a list but behaves like a list.
13. Write urls in their respective apps.
14. Dynamic routes can be added. For example dynamic id can be passed to the url using <int:id> 